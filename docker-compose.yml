version: '3.8'

services:
  # MongoDB 数据库
  mongodb:
    image: mongo
    container_name: blog-mongodb
    restart: unless-stopped
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 博客应用
  blog-app:
    build: .
    container_name: blog-app
    restart: unless-stopped
    ports:
      - "1834:1834"
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=your_secure_password_here
      - SERVER_PORT=1834
      - MONGO_URI=mongodb://admin:password@mongodb:27017
    volumes:
      - blog_uploads:/app/static/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1834/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - blog-app
    networks:
      - blog-network
    profiles:
      - production

volumes:
  mongodb_data:
  blog_uploads:

networks:
  blog-network:
    driver: bridge 